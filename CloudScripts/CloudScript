handlers.myTest = function (args) {

    // "currentPlayerId" is initialized to the PlayFab ID of the player logged-in on the game client. 
    // Cloud Script handles authenticating the player automatically.
    var message = "Hello " + currentPlayerId + "!";

    // You can use the "log" object to write out debugging statements. The "log" object has
    // three functions corresponding to logging level: debug, info, and error.
    log.info(message);

    // Whatever value you return from a CloudScript handler function is passed back 
    // to the game client. It is set in the "Results" property of the object returned by the 
    // RunCloudScript API. Any log statments generated by the handler function are also included 
    // in the "ActionLog" field of the RunCloudScript result, so you can use them to assist in
    // debugging and error handling.
    //return { messageValue: message };

    var result = server.GetUserReadOnlyData({ PlayFabId: currentPlayerId });
    return result;
}

handlers.canTrainUnit = function (args) {
    var saveData = server.GetUserReadOnlyData({ PlayFabId: currentPlayerId, Keys: ["BASE_MELEE_1"] });

    server.UpdateUserReadOnlyData({
        PlayFabId: currentPlayerId,
        Data: {
            BASE_MELEE_1: 10
        }
    });
}

handlers.getAllDataForClass = function (args) {
    var className = args.data["Class"];

    var data = GetTitleDataForClass(className);

    return data;
}

/////////////////////////////////////////////////
/// Upgradeables
/// Things that can have their level upgraded.
/////////////////////////////////////////////////

handlers.initiateUpgrade = function (args) {
    //var className = args.data["Class"];
    
    //var upgradeableData = GetLevelsForClass(className);
    //log.info(upgradeableData);

    //var data = GetTitleDataForClass(className);

    //for (var key in data) {
    //    var obj = data[key];
    //    log.info(obj["ID"]);
    //}

    return { outOfSync : true };
}

function GetTitleDataForClass(className) {
    var moduleNames = GetAllModules();
    for (var i = 0; i < moduleNames.length; i++) {
        moduleNames[i] += className;
    }

    var titleData = server.GetTitleData({ Keys : moduleNames });
    var dataPerModule = titleData["Data"];
    var classData = {};

    for (var moduleKey in dataPerModule) {
        var classesInModule = JSON.parse(dataPerModule[moduleKey]);

        for(var data in classesInModule) {
            classData[data] = classesInModule[data];
        }
    }

    return classData;
}

function GetAllModules() {
    var modules = ["Base"];

    return modules;
}

function GetLevelsForClass(className) {
    var upgradeableData;

    if (className == "Building") {
        upgradeableData = server.GetUserReadOnlyData({ PlayFabId: currentPlayerId, Keys: ["BuildingLevels"] });
    }

    return upgradeableData;
}

handlers.canUpgrade = function (args) {
    
}

handlers.getUpgradeCost = function (args) {
    
}

handlers.payForUpgrade = function (args) {
    
}

handlers.upgrade = function (args) {
    
}

/////////////////////////////////////////////////
/// ~Upgradeables
/////////////////////////////////////////////////

/////////////////////////////////////////////////
/// Buildings
/////////////////////////////////////////////////

handlers.building_initiateUpgrade = function (args) {
    var buildingSaveData = server.GetUserReadOnlyData({ PlayFabId: currentPlayerId, Keys: ["BuildingLevels"] });
    log.info(buildingSaveData);
    log.info(buildingSaveData["Data"]["BuildingLevels"]);
    log.info(buildingSaveData["Data"]["BuildingLevels"]["Value"]);

    var data = JSON.parse(buildingSaveData["Data"]["BuildingLevels"]["Value"]);
    log.info(data);

    data["BASE_BUILDING_1"] = 111;

    log.info(data);

    var dataAsString = JSON.stringify(data);

    server.UpdateUserReadOnlyData({
        PlayFabId: currentPlayerId,
        Data: {
            BuildingLevels : dataAsString
        }
    });
}

/////////////////////////////////////////////////
/// ~Buildings
/////////////////////////////////////////////////